version: '3.4'

services:
  app1: &app
    container_name: rinha-backend-api-01
    build:
      context: ../../
      dockerfile: Dockerfile
    hostname: app1
    environment:
      DB_URL: "postgres://postgres:123456578@postgres:5432/postgres"
      DB_POOL: 35
      REQ_TIMEOUT: "2000"
      NODE_ENV: production
      CLUSTER: true
      CLUSTER_WORKERS: 5
      HTTP_PORT: 8080
    expose:
      - "8080"
    depends_on:
      - postgres
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: '0.6GB'
  
  app2:
    <<: *app
    container_name: rinha-backend-api-02
    hostname: app2
  
  postgres:
    container_name: rinha-backend-db
    image: postgres:15.4
    command: postgres -c 'max_connections=450' -c 'log_error_verbosity=terse'
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 123456578
    ports:
      - 5432:5432
    healthcheck:
      test: pg_isready -U $$POSTGRES_USER
      interval: 5s
      timeout: 5s
      retries: 20
      start_period: 10s
    deploy:
      resources:
        limits:
          cpus: '0.4'
          memory: '1.5GB'
    
  nginx:
    container_name: rinha-backend-nginx
    image: nginx:alpine
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - app1
      - app2
    ports:
      - "9999:9999"
    deploy:
      resources:
        limits:
          cpus: '0.1'
          memory: '0.3GB'
